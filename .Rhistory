getwd()
library("swirl")
install_from_swirl("Getting and Cleaning Data")
k<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
k<-download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","data.csv")
head(k)
getwd()
ls
k<-read.csv("data.csv")
head(k)
names(k)
str(k)
head(k)
j<-subset(k,"VAL"==24)
j<-subset(k,VAL==24)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx","data1.xlsx")
t<-read.table("data1.xlsx")
head(t)
t<-read.table("data1.xlsx",skip=1)
library("data.table")
install.packages("data.table")
library('data.table')
?getDTthreads
t<-fread("data1.xlsx")
t<-fread("data1.xlsx",fill=TRUE)
t
str(t)
str(data)
library(readxl)
dat1 <- read_excel("Downloads/getdata_data_DATA.gov_NGAP (1).xlsx")
View(dat1)
str(dat1)
library(data.table)
dat1 <- fread("Downloads/getdata_data_DATA.gov_NGAP (1).xlsx")
View(dat)
library(data.table)
dat <- fread("Downloads/getdata_data_DATA.gov_NGAP (1).xlsx")
View(dat)
library(data.table)
dat <- fread("Downloads/getdata_data_DATA.gov_NGAP (1).xlsx")
View(dat)
library(data.table)
dat <- fread("Downloads/getdata_data_DATA.gov_NGAP (1).xlsx")
View(dat)
library("data.table")
dat <- fread("Downloads/getdata_data_DATA.gov_NGAP (1).xlsx")
?fread
dat <- fread("Downloads/getdata_data_DATA.gov_NGAP (1).xlsx",skip=17,nrows=6)
str(dat)
str(dat)
dat1
dat1$...8
dat1$...7
?subset
class(dat1)
names(dat1)
dat<-fread(dat1)
dat<-fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
str(dat)
library(dplyr)
k<-select(dat1,7:15)
dat<-k[c(18,19,20,21,22,23),]
dat
sum(dat$Zip*dat$Ext,na.rm=T)
dat$...7<-as.numeric(dat$...7)
dat<-as.numeric(dat)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",data.xml)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml","data.xml")
install.packages("XML")
library("XML")
dat<-xmlParse("data.xml")
dat
library("methods")
df<-xmlToDataFrame('data.xml')
df
df<-xmlParse('data.xml')
length(df)
root<-xmlRoot(df)
root
length(root)
root[1]
root[2]
df<-xmlTreeParse('data.xml')
roots<-xmlRoot(df)
length(roots)
roots[1]
df<-xmlTreeParse('data.xml',useInternalNodes = TRUE)
roots<-xmlRoot(df)
names(roots)
root[[1]]
xmlName(roots)
xmlSize(roots)
xmlName(roots)
df<-xmlTreeParse('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml',useInternalNodes = TRUE)
library('swirl')
sswirl()
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,dataa=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot()
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
--version
swirl()
library("swirl")
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point(geom_smooth())
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(lm)
g+geom_smooth("lm")
g+geom_point()+geom_smooth(lm)
g+geom_point()+geom_smooth(lm)
g
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(drv))
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(data=testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSe,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
library("swirl")
swirl()
dist(dataFrame)
hclust(distxy)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col='red')
5
12
abline(h=0.5,col="green")
dist(dfsm)
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library("swirl")
swirl()
swirl()
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(y,newClust2,mean)
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers = 3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
library("swirl")
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addpatt.R")
myedit("addPatt.R")
source("addPatt.R",local=True)
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
library("swirl")
swirl()
head(dataMatrix)
dataMatrix(10)
dataMatrix
heatmap(dataMatrix)
myedit("addpatt.R")
myedit("addpatt.R")
myedit("addPatt.R")
source("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scal(mat))
prcomp(scale(mat))
v
V
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[.2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-svd1$u[,1]%*%svd1$d[,1]%*%svd1$v[,1]
a1<-(svd1$u[,1]*svd1$d[,1])%*%svd1$v[,1]
a1<-(svd1$u[,1]*svd1$d[1])%*%svd1$v[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<-(sv1$u[,2]*svd1$d[2])%*%t(svd1$v[,2])
a2<-(svd1$u[,2]*svd1$d[2])%*%t(svd1$v[,2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(last[,562:563])
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
ssd$activity
table(ssd$activity)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,12])
names(sub1[1:12])
myedit("showXY.R")
showMe([1:6])
showMe(c(1:6))
mdist<-dist(x[,1:3])
mdist<-dist(sub1,x[,1:3])
mdist<-dist(sub1[,1:3])
hclust(mdist)
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist<-dist(sub1[10:12])
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(sv1$u)
dim(svd1$u)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[,10:12],maxCon))
mdist<-dist(sub1[,10:12]+maxCon)
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust=kmeans(sub1[,-c[562:563],centers=6)
kclust=kmeans(sub1[,-c[562:563],centers=6)
kclust<-kmeans(sub1[,-c[562:563],centers=6)
kClust<-kmeans(sub1[,-c(562:563),centers=6)
kClust<-kmeans(sub1[,-c(562,563),centers=6)
kClust<-kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)],centers=6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust$centers)
laying<-which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab='Laying Cluster')
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab='Walkdown Cluster')
library("swirl")
swirl()
cnames
strsplit(cnames,'|',fixed=TRUE)
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-(x1<0)
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
data<-pm1$Date
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,State.code==36 )
cnt0<-subset(pm0,State.Code==36 & both %in% county.site )
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn0<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,by='state')
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(1,52),y=mrg[,3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(x=rep(1,52),y=mrg[,2],x=(2,52),y=mrg[,3])
segments(x=rep(1,52),y=mrg[,2],x=rep(2,52),y=mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("~/Project Week 4")
dir()
NEI<-readRDS("summarySCC_PM25.rds")
baltimore<-subset(NEI,fips=="24510",type="ON-ROAD")
dyear<-split(baltimore,baltimore$year)
sums<-c()
for(year in dyear){
sums<-c(sums,sum(year$Emissions))
}
barplot(sums,names.arg = c(1999,2002,2005,2008),log="y",
col=wes_palette(n=4,name="GrandBudapest2"),
main="Total PM2.5 Emissions in Tons for 4 years in US from
Motor Vehicle")
library(wesanderson)
barplot(sums,names.arg = c(1999,2002,2005,2008),log="y",
col=wes_palette(n=4,name="GrandBudapest2"),
main="Total PM2.5 Emissions in Tons for 4 years in US from
Motor Vehicle")
LA<-subset(NEI,fips=="06037",type="ON-ROAD")
lyear<-split(LA,LA$year)
byear<-split(baltimore,baltimore$year)
Total=c()
Year=c()
Type=c()
#byear1<-split(type,type$year)
#mylist2<-c()
for(k in byear){
Type=c(Type,"Baltimore")
Year=c(Year,k[1,6])
Total<-c(Total,sum(k$Emissions))
}
for(l in lyear){
Type=c(Type,"LA")
Year=c(Year,l[1,6])
Total<-c(Total,sum(l$Emissions))
}
df<-data.frame(Type,Year,Total)
ggplot(df)+geom_line(aes(x=Year,y=Total,color=Type)
,size=2)+xlab("Year")+ylab("PM2.5 in Tons")+labs(title = "Comparisons between Baltimore and LA")
library(ggplot2)
LA<-subset(NEI,fips=="06037",type="ON-ROAD")
lyear<-split(LA,LA$year)
byear<-split(baltimore,baltimore$year)
Total=c()
Year=c()
Type=c()
#byear1<-split(type,type$year)
#mylist2<-c()
for(k in byear){
Type=c(Type,"Baltimore")
Year=c(Year,k[1,6])
Total<-c(Total,sum(k$Emissions))
}
for(l in lyear){
Type=c(Type,"LA")
Year=c(Year,l[1,6])
Total<-c(Total,sum(l$Emissions))
}
df<-data.frame(Type,Year,Total)
ggplot(df)+geom_line(aes(x=Year,y=Total,color=Type)
,size=2)+xlab("Year")+ylab("PM2.5 in Tons")+labs(title = "Comparisons between Baltimore and LA")
